<?xml version="1.0" encoding="UTF-8"?>
<!--status指定打印日志的级别-->
<Configuration status="Info">
    <!--Appenders节点,里面是子节点-->
    <Appenders>
        <!--Console子节点定义输出控制台的Appenders节点-->
        <Console name="Console" target="SYSTEM_OUT">
            <!--<PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>-->
            <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>
        </Console>
        <!--File节点用来定义输出到指定位置的文件的Appender
               name:指定Appender的名字.
　　　　　　　　fileName:指定输出日志的目的文件带全路径的文件名.
　　　　　　　　PatternLayout:输出格式，不设置默认为:%m%n-->
        <!--<File name="Console">
            &lt;!&ndash;日志信息输出到/Users/huangjie/Desktop/log4j2Print.txt文件里面&ndash;&gt;
            &lt;!&ndash;<fileName>/Users/huangjie/Desktop/log4j2Print.txt</fileName>&ndash;&gt;
            &lt;!&ndash;<fileName>/root/log4j2Print.txt</fileName>&ndash;&gt;
            <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>
        </File>-->

    </Appenders>
    <!--Loggers节点,里面是子节点-->
    <Loggers>
        <!--Root节点用来指定项目的根日志，如果没有单独指定Logger，
        那么就会默认使用该Root日志输出level:日志输出级别，共有8个级别，
        按照从低到高为：All < Trace < Debug < Info < Warn < Error < Fatal < OFF -->
        <Root level="Debug">
            <!--AppenderRef：Root的子节点，用来指定该日志输出到哪个Appender-->
            <AppenderRef ref="Console"/>
        </Root>
    </Loggers>
</Configuration>


        <!--关于日志的输出级别介绍-->
        <!--共有8个级别，按照从低到高为：All < Trace < Debug < Info < Warn < Error < Fatal < OFF.
        　　　　　　All:最低等级的，用于打开所有日志记录.
        　　　　　　Trace:是追踪，就是程序推进以下，你就可以写个trace输出，所以trace应该会特别多，不过没关系，我们可以设置最低日志级别不让他输出.
        　　　　　　Debug:指出细粒度信息事件对调试应用程序是非常有帮助的.
        　　　　　　Info:消息在粗粒度级别上突出强调应用程序的运行过程.
        　　　　　　Warn:输出警告及warn以下级别的日志.
        　　　　　　Error:输出错误信息日志.
        　　　　　　Fatal:输出每个严重的错误事件将会导致应用程序的退出的日志.
        　　　　　　OFF:最高等级的，用于关闭所有日志记录.
        　　　　　　程序会打印高于或等于所设置级别的日志，设置的日志等级越高，打印出来的日志就越少。
        -->
